package com.heso.service.article;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.print.attribute.Size2DSyntax;

import oracle.net.aso.l;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.heso.db.DatabaseMgr;
import com.heso.service.article.entity.ArticleAndvideoREturnObject;
import com.heso.service.article.entity.ArticleCommentDTO;
import com.heso.service.order.consume.entity.ConsumeOrderObject;
import com.sun.org.apache.regexp.internal.recompile;

import data.DataRow;
import data.DataTable;

 



public class ArticleService {
	private static final Log logger = LogFactory.getLog(ArticleService.class);
	
	/**
	 * 获取专家课堂
	 * @param designerId
	 * @return
	 */
	public    ArticleAndvideoREturnObject getVideo(String designerId){
		DatabaseMgr dbm = DatabaseMgr.getInstance();
		Connection conn = null;
		DataRow dr = null;
		ArticleAndvideoREturnObject aavro = new ArticleAndvideoREturnObject();
		ArrayList<ArticleCommentDTO> acDtoList = new ArrayList<ArticleCommentDTO>();
		try {
			conn = dbm.getConnection();
			String sql = "SELECT hdc.id,hdc.videoname,hdc.videolength,hdc.videosrc,hdc.like,hdc.videoimage,hdc.createtime,hd.admin_name,hd.image " +
					"FROM heso_designer_class as hdc,heso_admin as hd " +
					"WHERE hdc.designerid = ? AND hdc.designerid = hd.admin_id";
			ArrayList<Object> argsList = new ArrayList<Object>();
			argsList.add(designerId);
			DataTable dt = DatabaseMgr.getInstance().execSqlTrans(sql, argsList, conn);
			int n = dt.getRows().size();
			if(dt.getRows().size()<=0){
				logger.error(">>>>>>>>>查询专家课堂失败");
				throw new Exception("");
			}
			for(int i=0;i<dt.getRows().size();i++){
				ArticleCommentDTO dto = new ArticleCommentDTO();
				String designerName = dt.getRows().get(i).getString("admin_name");
				String id = dt.getRows().get(i).getString("id");
				String videonName = dt.getRows().get(i).getString("videoname");
				String videoSrc = dt.getRows().get(i).getString("videosrc");
				String like = dt.getRows().get(i).getString("like");
				String videoLength = dt.getRows().get(i).getString("videolength");
				String videoImage = dt.getRows().get(i).getString("videoimage");
				String image = dt.getRows().get(i).getString("image");
				String createTime = dt.getRows().get(i).getString("createTime");
				dto.setDesignerName(designerName);
				dto.setImage(image);
				dto.setLike(like);
				dto.setvideoId(id);
				dto.setvideoImage(videoImage);
				dto.setvideoLength(videoLength);
				dto.setvideonName(videonName);
				dto.setvideoSrc(videoSrc);
				dto.setDcreateTime(createTime);
				acDtoList.add(dto);
			}
			 aavro.setAcDtoList(acDtoList);
		}catch (Exception e) {
			// TODO: handle exception
			logger.error(e.getMessage());
		}finally{

			try {
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
		}
	return aavro;
	}
	
	/**
	 * 视频点赞
	 * @param videoId
	 * @return
	 */
	public   ArticleAndvideoREturnObject addLikeTovideo(String videoId){
		ArticleAndvideoREturnObject aavro = new ArticleAndvideoREturnObject();
		DatabaseMgr dbm = DatabaseMgr.getInstance();
		Connection conn = null;
		DataRow dr = null;
		try {
			conn = dbm.getConnection();
			String sql = "UPDATE heso_designer_class as hdc SET hdc.like = hdc.like+1 where ID=?";
			ArrayList<Object> argsList = new ArrayList<Object>();
			argsList.add(videoId);
			if (DatabaseMgr.getInstance().execNonSql(sql, argsList) <= 0)
				throw new Exception("100303");
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return aavro;
	
	}
	public  ArticleAndvideoREturnObject getCommentByvideoId(String videoID){

		DatabaseMgr dbm = DatabaseMgr.getInstance();
		Connection conn = null;
		DataRow dr = null;
		ArticleAndvideoREturnObject aavro = new ArticleAndvideoREturnObject();
		ArrayList<ArticleCommentDTO> acDtoList = new ArrayList<ArticleCommentDTO>();
		try {
			conn = dbm.getConnection();
			String sql = "SELECT hc.ACCOUNT,hc.USER_ID,hc.CREATE_TIME,hc.COMMENT ,ha.image from heso_comment as hc ,heso_account as ha where video_ID =? AND ha.ACCOUNT=hc.ACCOUNT;";
			ArrayList<Object> argsList = new ArrayList<Object>();
			argsList.add(videoID);
			DataTable dt = DatabaseMgr.getInstance().execSqlTrans(sql, argsList, conn);
			int n = dt.getRows().size();
 			if(dt.getRows().size() <= 0 ) 
				throw new Exception("001095");
			for(int i = 0 ;i<dt.getRows().size();i++){
				ArticleCommentDTO dto = new ArticleCommentDTO();
 
				String account = dt.getRows().get(i).getString("account");
				String userName = dt.getRows().get(i).getString("user_id");
				String createTime = dt.getRows().get(i).getString("create_time");
				String comment = dt.getRows().get(i).getString("comment");
				String 	image = dt.getRows().get(i).getString("image");
				dto.setaccount(account);
				dto.setAccountName(userName);
				dto.setDcreateTime(createTime);
				dto.setComment(comment);
				dto.setImage(image);
				acDtoList.add(dto);
			}
			aavro.setAcDtoList(acDtoList);
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	return aavro;
	}
	/**
	 * 文章点赞
	 */
	public void addGood(String articleId){
		DatabaseMgr dbm = DatabaseMgr.getInstance();
		Connection conn = null;
		DataRow dr = null;
		try {
			conn = dbm.getConnection();
			String sql = "UPDATE heso_article_infor SET good_count = good_count+1 where ARTICLE_ID=?";
			ArrayList<Object> argsList = new ArrayList<Object>();
			argsList.add(articleId);
			if (DatabaseMgr.getInstance().execNonSql(sql, argsList) <= 0)
				throw new Exception("100303");
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public  void addCommentByvideoId(String videoID,String comment,String userId,String account){
		
		DatabaseMgr dbm = DatabaseMgr.getInstance();
		Connection conn = null;
		DataRow dr = null;
		try {
			conn = dbm.getConnection();
			String sql = "insert into heso_comment (TYPE,video_ID,ACCOUNT,USER_ID,COMMENT,COMMENT_ID)VALUES(?,?,?,?,?,?)";
			ArrayList<Object> argsList = new ArrayList<Object>();
			argsList.add("1");
			argsList.add(videoID);
			argsList.add(account);
			argsList.add(userId);
			argsList.add(comment);
			argsList.add(videoID);
			if (DatabaseMgr.getInstance().execNonSql(sql, argsList) <= 0)
				throw new Exception("100303");
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	/**
	 * 添加评论
	 * @param articleId
	 * @param comment
	 * @param userId
	 * @param account
	 */
	
	public  void addComment(String articleId,String comment,String userId,String account){
		
		DatabaseMgr dbm = DatabaseMgr.getInstance();
		Connection conn = null;
		DataRow dr = null;
		try {
			conn = dbm.getConnection();
			String sql = "insert into heso_comment (TYPE,ARTICLE_ID,ACCOUNT,USER_ID,COMMENT,COMMENT_ID)VALUES(?,?,?,?,?,?)";
			ArrayList<Object> argsList = new ArrayList<Object>();
			argsList.add("1");
			argsList.add(articleId);
			argsList.add(account);
			argsList.add(userId);
			argsList.add(comment);
			argsList.add(articleId);
			if (DatabaseMgr.getInstance().execNonSql(sql, argsList) <= 0)
				throw new Exception("100303");
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	
	public  static void getArticleList(){
		DatabaseMgr dbm = DatabaseMgr.getInstance();
		Connection conn = null;
		DataRow dr = null;
		try {
			conn = dbm.getConnection();
			String sql = "SELECT a1.ARTICLE_ID,a2.ARTICLE_CONTENT  FROM heso_article_infor a1,heso_article_infor_detail a2,heso_comment c where a1.ARTICLE_ID=a2.ARTICLE_ID AND a1.ARTICLE_ID = c.article_id";
			ArrayList<Object> argsList = new ArrayList<Object>();
			DataTable dt = DatabaseMgr.getInstance().execSqlTrans(sql, argsList, conn);
 			if(dt.getRows().size() <= 0 )
				throw new Exception("101268");
 			
 			for (int i = 0; i < dt.getRows().size(); i++) {
				DataRow dr1 = dt.getRows().get(i);
				String articleId =dr1.getString("ARTICLE_ID");
				String comment = dr1.getString("ARTICLE_CONTENT");
				}
			String [] orderIds = dt.getRows().get(0).getString("ARTICLE_ID").split(";");
		
			
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {  
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	public static void main(String[] args) {
		//addGood("1");
		//addComment("1", "testetesttsetse", "fdf", "fhdjhfjd");
		//ArrayList<ArticleCommentDTO>   aCommentDTOs = getVideo("1111111");
		//addLikeTovideo("0");
		//ArticleAndvideoREturnObject vaa = getCommentByvideoId("0");
		//addCommentByvideoId("0", "hhh", "爸爸在", "0000000000000019");
		//ArticleAndvideoREturnObject a = getVideo("1111111");
		System.out.println("-------");
	}
}
